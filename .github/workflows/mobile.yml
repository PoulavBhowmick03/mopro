name: Mobile Tests

on:
  push:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

env:
  CARGO_TERM_COLOR: always

jobs:
  build-xcframework:
    runs-on: macos-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: install dependencies
        run: brew install nasm
      - name: Build iOS xcframework
        run: cd test-e2e && cargo run --bin ios
      - name: Cache xcframework
        id: cache-xcframework
        uses: actions/cache/save@v4
        with:
          path: test-e2e/MoproiOSBindings
          key: ${{ github.sha }}-xcframework

  build-ios-app-device:
    runs-on: macos-latest
    needs: build-xcframework
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Restore cached xcframework
        id: cache-restore-xcframework
        uses: actions/cache/restore@v4
        with:
          path: test-e2e/MoproiOSBindings
          key: ${{ github.sha }}-xcframework
      - name: Build app for device
        run: xcodebuild -project ./test-e2e/ios/mopro-test.xcodeproj -scheme mopro-test -destination generic/platform=iOS build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

  build-ios-app-simulator:
    runs-on: macos-latest
    needs: build-xcframework
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Restore cached xcframework
        id: cache-restore-xcframework
        uses: actions/cache/restore@v4
        with:
          path: test-e2e/MoproiOSBindings
          key: ${{ github.sha }}-xcframework
      - name: Build app for device
        run: xcodebuild -project ./test-e2e/ios/mopro-test.xcodeproj -scheme mopro-test -destination generic/platform=iOS\ Simulator build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

  test-ios-app-simulator:
    runs-on: macos-14
    needs: build-xcframework
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Restore cached xcframework
        id: cache-restore-xcframework
        uses: actions/cache/restore@v4
        with:
          path: test-e2e/MoproiOSBindings
          key: ${{ github.sha }}-xcframework
      - name: Test app in simulator
        run: xcodebuild -project ./test-e2e/ios/mopro-test.xcodeproj -scheme mopro-test -destination 'platform=iOS Simulator,name=iPhone 15' test CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -maximum-parallel-testing-workers 1

  build-android-lib:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: install requirements
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: curl xz-utils build-essential cmake m4 nasm libstdc++6
          version: 1.0
      - name: Build Android bindings
        run: cd test-e2e && ANDROID_ARCHS=x86_64-linux-android cargo run --bin android
      - name: Cache android lib
        id: cache-android-lib
        uses: actions/cache/save@v4
        with:
          path: test-e2e/MoproAndroidBindings
          key: ${{ github.sha }}-android-lib

  test-android-app:
    runs-on: ubuntu-latest
    needs: build-android-lib
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Restore cached android lib
        id: cache-restore-android-lib
        uses: actions/cache/restore@v4
        with:
          path: test-e2e/MoproAndroidBindings
          key: ${{ github.sha }}-android-lib
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10
      - name: Build android app
        run: cd test-e2e/android && ./gradlew build
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          disable-animations: true
          emulator-options: "-no-snapshot -no-boot-anim -no-window -gpu swiftshader_indirect -memory 2048 -cores 1"
          script: cd test-e2e/android && ./gradlew connectedAndroidTest
      - name: Upload test report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-report
          path: test-e2e/android/app/build/reports/androidTests/connected/debug/
